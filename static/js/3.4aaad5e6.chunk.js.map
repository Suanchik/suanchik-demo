{"version":3,"sources":["components/Messages/Messenger.module.css","components/Messages/Dialog.jsx","components/Messages/MessagesList.jsx","components/Messages/Messenger.jsx","components/Messages/Messenger.Container.jsx"],"names":["module","exports","Dialog","props","className","classes","itemD","dialogMessage","message","MessagesList","item","to","id","activeClassName","active","dialogStyles","names","dialogList","img","lastmessage","maxLength500","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","textareaButton","Field","component","Textarea","placeholder","cols","name","validate","Messenger","useState","showDialogs","setShowMessage","ShowMessage","dialog","messagesList","addMessageC","dialogData","map","d","messagesData","m","dialogname","src","ava","Dialogs","showMessage","onClick","messagelist","dialog2","value","messageBody","compose","connect","state","newMLetter","MessagesPage","dispatch","addMessageAC","withAuthRedirect"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,QAAU,2BAA2B,YAAc,+BAA+B,cAAgB,iCAAiC,OAAS,0BAA0B,KAAO,wBAAwB,MAAQ,yBAAyB,OAAS,0BAA0B,aAAe,gCAAgC,QAAU,2BAA2B,eAAiB,kCAAkC,YAAc,+BAA+B,YAAc,iC,wHCa9cC,EAXA,SAACC,GAEZ,OACI,yBAAKC,UAAWC,IAAQC,OACpB,yBAAKF,UAAWC,IAAQE,eAChB,6BAAK,8BAAOJ,EAAMK,a,QCUvBC,EAbM,SAACN,GAClB,OACI,yBAAKC,UAAWC,IAAQK,MACpB,6BACI,kBAAC,IAAD,CAASC,GAAI,cAAgBR,EAAMS,GAAIC,gBAAiBR,IAAQS,QAC5D,yBAAKV,UAAWC,IAAQU,cACpB,0BAAMX,UAAWC,IAAQW,OAAQb,EAAMc,YAAmBd,EAAMe,IAAI,yBAAKd,UAAWC,IAAQc,aAAxB,iH,kDCsCtFC,EAAeC,YAAiB,KAchCC,EAAsBC,YAAU,CAAEC,KAAM,aAAlBD,EAZL,SAACpB,GACpB,OACI,0BAAMsB,SAAUtB,EAAMuB,cAClB,yBAAKtB,UAAWC,IAAQsB,gBACpB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,YAAY,iIAA6BC,KAAK,KAAKC,KAAK,cAAcC,SAAU,CAACd,KAC7G,+FASDe,EAvDG,SAAChC,GAAW,IAAD,EAEaiC,oBAAS,GAFtB,mBAElBC,EAFkB,KAELC,EAFK,KAInBC,EAAc,WAChBD,GAAgBD,IAGhBG,EAASrC,EAAMqC,OACfC,EAAetC,EAAMsC,aACrBC,EAAcvC,EAAMuC,YAEpBC,EAAaH,EAAOI,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAQjC,GAAIiC,EAAEjC,GAAIJ,QAASqC,EAAErC,aAC1DsC,EAAeL,EAAaG,KAAI,SAAAG,GAAC,OAAI,kBAAC,EAAD,CAAcnC,GAAImC,EAAEnC,GAAIK,WAAY8B,EAAEC,WAAY9B,IAAK,yBAAK+B,IAAMF,EAAE7B,IAAY6B,EAAE7B,IAARgC,WAOnH,OACI,yBAAK9C,UAAWC,IAAQ8C,SAClBd,EACE,8BACI,0BAAMjC,UAAWC,IAAQ+C,YAAaC,QAASd,GAA/C,0FACA,yBAAKnC,UAAWC,IAAQiD,aACnBR,IAJG,0BAAM1C,UAAWC,IAAQ+C,YAAaC,QAASd,GAA/C,2GAOhB,yBAAKnC,UAAWC,IAAQmC,QACpB,yBAAKpC,UAAWC,IAAQkD,SACnBZ,EACD,kBAACrB,EAAD,CAAqBG,SAjBnB,SAAC+B,GACfd,EAAYc,EAAMC,oBCDXC,4BACXC,aAlBkB,SAACC,GACnB,MAAO,CACHC,WAAYD,EAAME,aAAaD,WAC/BE,SAAUH,EAAME,aAAaC,SAC7BvB,OAAQoB,EAAME,aAAatB,OAC3BC,aAAcmB,EAAME,aAAarB,iBAIhB,SAACsB,GACtB,MAAO,CACHrB,YADG,SACUe,GACTM,EAASC,YAAaP,SAO9BQ,IAFWP,CAGbvB","file":"static/js/3.4aaad5e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Messenger_Dialogs__tsgjK\",\"messagelist\":\"Messenger_messagelist__2va0j\",\"dialogMessage\":\"Messenger_dialogMessage__YBNIe\",\"dialog\":\"Messenger_dialog__2LLNG\",\"item\":\"Messenger_item__1qLFf\",\"names\":\"Messenger_names__2GyyF\",\"active\":\"Messenger_active__23_SJ\",\"dialogStyles\":\"Messenger_dialogStyles__3ItkB\",\"dialog2\":\"Messenger_dialog2__16WaV\",\"textareaButton\":\"Messenger_textareaButton__1cWRP\",\"showMessage\":\"Messenger_showMessage__3eROM\",\"lastmessage\":\"Messenger_lastmessage__2q06c\"};","import React from 'react';\r\nimport classes from './Messenger.module.css'\r\n\r\nconst Dialog = (props) => {\r\n    \r\n    return (\r\n        <div className={classes.itemD}>\r\n            <div className={classes.dialogMessage}>\r\n                    <div><span>{props.message}</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n;\r\nexport default Dialog;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Messenger.module.css';\r\n\r\n\r\nconst MessagesList = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <div>\r\n                <NavLink to={`/Messenger/` + props.id} activeClassName={classes.active} >\r\n                    <div className={classes.dialogStyles}>\r\n                        <span className={classes.names}>{props.dialogList}</span>{props.img}<div className={classes.lastmessage}>последнее сообщениe</div>\r\n                    </div></NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessagesList;","import React, { useState } from 'react';\r\nimport Dialog from './Dialog';\r\nimport MessagesList from './MessagesList';\r\nimport classes from './Messenger.module.css'\r\nimport ava from '../../assets/avaImg/mal2.jpg';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Form, Textarea } from '../coummon/Prilouder/formControls/formControls';\r\nimport { maxLengthCreator, required } from '../../Utils/validator/validator';\r\n\r\n\r\nconst Messenger = (props) => {\r\n\r\n    const [showDialogs, setShowMessage] = useState(false);\r\n\r\n    const ShowMessage = () => {\r\n        setShowMessage(!showDialogs)\r\n    }\r\n\r\n    let dialog = props.dialog;\r\n    let messagesList = props.messagesList;\r\n    let addMessageC = props.addMessageC\r\n\r\n    let dialogData = dialog.map(d => <Dialog id={d.id} message={d.message} />);\r\n    let messagesData = messagesList.map(m => <MessagesList id={m.id} dialogList={m.dialogname} img={<img src={!m.img ? ava : m.img} />} />)\r\n\r\n    let addMessages = (value) => {\r\n        addMessageC(value.messageBody)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.Dialogs}>\r\n            {!showDialogs ? <span className={classes.showMessage} onClick={ShowMessage}>показать сообщения</span> :\r\n                <span>\r\n                    <span className={classes.showMessage} onClick={ShowMessage}>cкрыть сообщения</span>\r\n                    <div className={classes.messagelist}>\r\n                        {messagesData}\r\n                    </div>\r\n                </span>}\r\n            <div className={classes.dialog}>\r\n                <div className={classes.dialog2}>\r\n                    {dialogData}\r\n                    <AddMessageReduxForm onSubmit={addMessages} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength500 = maxLengthCreator(500);\r\n\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.textareaButton}>\r\n                <Field component={Textarea} placeholder=\"Напишите ваше сообщние ...\" cols=\"80\" name=\"messageBody\" validate={[maxLength500,]} />\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"messenger\" })(addMessageForm);\r\n\r\nexport default Messenger;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { addMessageAC } from '../../redux/messagesReducer';\r\nimport Messenger from './Messenger';\r\n\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        newMLetter: state.MessagesPage.newMLetter,\r\n        dispatch: state.MessagesPage.dispatch,\r\n        dialog: state.MessagesPage.dialog,\r\n        messagesList: state.MessagesPage.messagesList\r\n    }\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageC (messageBody) {\r\n            dispatch(addMessageAC(messageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messenger)\r\n\r\n"],"sourceRoot":""}