{"version":3,"sources":["components/Messages/Messenger.module.css","assets/avaImg/close.svg","components/Messages/Dialog.jsx","components/Messages/MessagesList.jsx","components/Messages/Messenger.jsx","components/Messages/Messenger.Container.jsx"],"names":["module","exports","Dialog","props","className","classes","itemD","dialogMessage","messages","map","message","key","id","author","mymessage","span","src","name","img","ava","alt","onClick","messagId","window","confirm","deleteMessage","index","udalit","MessagesList","item","dialogStyles","names","dialogList","maxLength500","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","textareaButton","Field","component","TextareaPostsAndMessages","placeholder","cols","validate","required","disabled","dialogId","withRouter","useState","personDialog","setpersonDialog","match","params","useEffect","m","messagesList","filter","el","dialogname","dialog","messagesData","to","getPersonDialog","activeClassName","active","addMessages","value","addMessageC","Math","random","messageBody","Dialogs","style","display","backgroundColor","boxShadow","marginRight","messagelist","curentDialog","opacity","fontWeight","d","dialog2","path","render","compose","connect","state","profile","ProfilePage","newMLetter","MessagesPage","dispatch","addMessageAC","withAuthRedirect","Messenger"],"mappings":"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","file":"static/js/3.6b6d4952.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Messenger_Dialogs__2sLEJ\",\"messagelist\":\"Messenger_messagelist__39cRO\",\"itemD\":\"Messenger_itemD__vkkcW\",\"dialogMessage\":\"Messenger_dialogMessage__2_Vwk\",\"img\":\"Messenger_img__1jjgU\",\"dialog\":\"Messenger_dialog__kWiKW\",\"item\":\"Messenger_item__aHh78\",\"names\":\"Messenger_names__13KEh\",\"active\":\"Messenger_active__RDj_G\",\"dialogStyles\":\"Messenger_dialogStyles__18rWz\",\"dialog2\":\"Messenger_dialog2__OBFf3\",\"textareaButton\":\"Messenger_textareaButton__94N5s\",\"showMessage\":\"Messenger_showMessage__HP9ru\",\"lastmessage\":\"Messenger_lastmessage__1ZU2J\",\"span\":\"Messenger_span__3cocT\",\"mymessage\":\"Messenger_mymessage__jDiZP\",\"curentDialog\":\"Messenger_curentDialog__3LUex\",\"name\":\"Messenger_name__Gj85-\"};","module.exports = __webpack_public_path__ + \"static/media/close.1175686f.svg\";","import React from 'react';\r\nimport classes from './Messenger.module.css';\r\nimport udalit from '../../assets/avaImg/close.svg';\r\nimport ava from '../../assets/avaImg/mal2.jpg'\r\n\r\nconst Dialog = (props) => {\r\n\r\n    const deleteMessage = (messagId) => {\r\n        if (window.confirm('удалить сообщение?')) {\r\n            props.deleteMessage(props.index, messagId)\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.itemD}>\r\n            <div className={classes.dialogMessage}>\r\n                {props.messages.map(message =>\r\n                    <div key={message.id} className=\"dialog_container\">\r\n                        <span className={message.author === 'me' ? classes.mymessage : classes.span}>\r\n                            <img src={message.author === props.name ? props.img : ava} alt=\"\" /> {message.message}\r\n                        </span>\r\n                        <span className={classes.img} onClick={() => deleteMessage(message.id)}>\r\n                            <img src={udalit} alt=\"delete\" />\r\n                        </span>\r\n                    </div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n;\r\nexport default Dialog;","import React from 'react';\r\nimport classes from './Messenger.module.css';\r\n\r\n\r\nconst MessagesList = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <div>\r\n                <div className={classes.dialogStyles}>\r\n                    <div className={classes.names}>{props.dialogList}</div>{props.img}\r\n                    {/* <div className={classes.lastmessage}>последнее сообщениe</div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessagesList;","import React, { useEffect, useState } from 'react';\r\nimport Dialog from './Dialog';\r\nimport MessagesList from './MessagesList';\r\nimport classes from './Messenger.module.css'\r\nimport ava from '../../assets/avaImg/mal2.jpg';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextareaPostsAndMessages } from '../coummon/Prilouder/formControls/formControls';\r\nimport { maxLengthCreator, required } from '../../Utils/validator/validator';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\n\r\n\r\nconst Messenger = (props) => {\r\n\r\n    const [personDialog, setpersonDialog] = useState(null);\r\n\r\n    const getPersonDialog = (m) => {\r\n        setpersonDialog({ dialogname: m.dialogname, img: m.img })\r\n    }\r\n\r\n    let dialogId = props.match.params.dialogId;\r\n\r\n    useEffect(() => {\r\n        if (dialogId) {\r\n            const m = [...props.messagesList].filter(el => el.id === dialogId)\r\n            setpersonDialog({ dialogname: m[0].dialogname, img: m[0].img })\r\n        } else {\r\n            const m = [...props.messagesList].filter(el => el.id === dialogId)\r\n            setpersonDialog({ dialogname: null, img: ava })\r\n        }\r\n    }, [])\r\n\r\n\r\n    let dialog = props.messagesList;\r\n    let messagesList = props.messagesList;\r\n\r\n    let messagesData = messagesList.map((m, index) => <NavLink to={`/Messenger/` + m.id} key={m.id} onClick={() => getPersonDialog(m)} activeClassName={classes.active} ><MessagesList key={index} id={m.id} dialogList={m.dialogname} img={<img src={!m.img ? ava : m.img} />} /></NavLink>)\r\n\r\n    let addMessages = (value) => {\r\n        props.addMessageC({ id: Math.random() * 5, message: value.messageBody, author: 'me' }, dialogId)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Dialogs}>\r\n            <span style={{ display: \"inline-block\", backgroundColor: \"white\", boxShadow: \"0 0 0 0.5px rgb(0,0,0, 0.5)\", marginRight: \"-5px\" }}>\r\n                {/* <span className={classes.showMessage} onClick={ShowMessage}>cкрыть сообщения</span> */}\r\n                <div className={classes.messagelist}>\r\n                    {messagesData}\r\n                </div>\r\n            </span>\r\n            {/* } */}\r\n            <div className={classes.dialog}>\r\n                {\r\n                    personDialog ?\r\n                        <div className={classes.curentDialog}>\r\n                            <div className={classes.name}>\r\n                                <span style={{ opacity: '0.7', fontWeight: 'normal' }}>{personDialog.dialogname === null ? \"выберите собеседника\" : \"ваша переписка с\"} </span>{personDialog.dialogname}</div>\r\n                            <img src={personDialog.img} alt=\"ava\" />\r\n                        </div> :\r\n                        null\r\n                }\r\n                {\r\n                    dialog.map((d, index) =>\r\n                        <div key={d.id} className={classes.dialog2} >\r\n                            <Route path={\"/Messenger/\" + d.id} render={() =>\r\n                                <Dialog name={d.dialogname} img={d.img} key={index} index={index} id={d.id} messages={d.dialog} deleteMessage={props.deleteMessage} />\r\n                            } />\r\n                            <AddMessageReduxForm dialogId={dialogId} onSubmit={addMessages} />\r\n                        </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength500 = maxLengthCreator(500);\r\n\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.textareaButton}>\r\n                <Field component={TextareaPostsAndMessages} placeholder=\"Напишите ваше сообщние ...\" cols=\"70\" name=\"messageBody\" validate={[required, maxLength500]} />\r\n                <button disabled={!props.dialogId}>Отправить</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"messenger\" })(addMessageForm);\r\n\r\nexport default withRouter(Messenger);","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { addMessageAC, deleteMessage } from '../../redux/messagesReducer';\r\nimport Messenger from './Messenger';\r\n\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        newMLetter: state.MessagesPage.newMLetter,\r\n        dispatch: state.MessagesPage.dispatch,\r\n        dialog: state.MessagesPage.dialog,\r\n        messagesList: state.MessagesPage.messagesList\r\n    }\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageC(messageBody, dialogId) {\r\n            dispatch(addMessageAC(messageBody, dialogId))\r\n        },\r\n        deleteMessage(index, id) {\r\n            dispatch(deleteMessage(index, id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messenger)\r\n\r\n"],"sourceRoot":""}