{"version":3,"sources":["Hoc/withAuthRedirect.js","redux/messagesReducer.js","assets/avaImg/loading.gif","components/coummon/Prilouder/Prilouder.module.css","components/Login/login.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/coummon/Prilouder/formControls/formControls.js","components/coummon/Prilouder/Prilouder.jsx","components/Header/Header.jsx","api/api.js","redux/auth.reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/NavBar/NavBar.jsx","redux/profileReducer.js","components/Posts/Posts.jsx","components/Posts/MyPosts.jsx","components/Posts/MyPosts.Container.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/Profile.Container.jsx","Utils/objehelper.js","redux/usersReducer.js","components/coummon/padinator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users.selectors.js","components/Users/Users.Container.jsx","redux/appReducer.js","redux/redux-store.js","Hoc/WithLaziSuspense.js","App.js","serviceWorker.js","index.js","components/NavBar/NavBar.module.css","Utils/validator/validator.js","assets/avaImg/mal2.jpg","components/coummon/Prilouder/formControls/formControls.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/Posts/MyPosts.module.css","components/Posts/Posts.module.css","components/coummon/paginator.module.css","components/Users/Users.module.css"],"names":["mapStateToProps","state","isAuth","Auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","initial","messagesList","id","dialogname","img","dialog","message","addMessageAC","messageBody","type","messagesReducer","action","module","exports","Textarea","input","meta","HasError","touched","error","className","classes","formControl","Input","createField","placeholder","name","component","validate","text","Prilouder","src","gifka","louder","Header","header","logBlock","onClick","LogOut","instance","axios","withCredentials","headers","baseURL","UsersAPI","getUsers","carrentPage","pageSise","get","UnFollow","delete","Follow","post","ProfileAPI","peopleID","status","put","photo","formData","FormData","append","AuthAPI","email","password","rememberMe","login","setUserData","data","dispatch","a","response","resultCode","authReducer","HeaderContainer","maxLength50","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","LogIn","messages","length","stopSubmit","_error","Nav","activeClassName","activeLink","item","posts","likes","profile","setStatus","setPhoto","profileReducer","newPLetter","postBody","filter","p","postId","photos","Posts","PostImg","ava","deletePost","postMessage","MyPosts","memo","addPostC","postsData","reverse","map","AddPostReduxForm","value","Post","maxLength10","textareaButton","Field","MyPostsContainer","ProfilePage","addPostAC","ProfileStatusWithHooks","useState","editMode","SetEditMode","SetStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","onBlur","upDataStatus","ProfileInfo","profileInfo","AvaImg","large","alt","isOuner","target","files","saveFile","mainPhoto","userInfo","userName","fullName","ProfileStatusWithHook","aboutMe","contacts","facebook","vk","twitter","instagram","Profile","toggalIsFollowing","ProfileContainer","componentDidMount","userId","match","params","isAuthId","history","push","getProfile","getUserStatus","prevProps","prevState","compose","withRouter","upDataObjectArray","items","itemsId","newObj","u","users","totalCount","isFetching","followSuccess","usersId","unfollowSuccess","setToggal","toggalIsFollowingProgress","followUnfollow","apiMethod","actionCreater","usersReducer","followed","page","Paginator","pagesCount","pages","i","Math","ceil","protionCount","portionNumber","setPortionNumber","leftPortionPageNum","rightPortionPageNum","pageNumber","pageNumberBold","setCurrentPage","User","user","disabled","some","UnFollowThunkCreater","unfollowColor","FollowThunkCreater","Users","GetUsers","createSelector","UsersPage","GetTotalCount","GetPageSise","GetCarrentPage","GetIsFetching","GetToggalIsFollowing","UserAPI","getUsersThunkCreater","UsersContainer","then","bind","initialised","appReducer","require","createStore","combineReducers","applyMiddleware","store","MessagesPage","formReducer","App","thunkMeddlewara","WithLaziSuspense","fallback","MessengerContainer","lazy","initialize","NavBar","path","render","AppContainer","promise","Promise","all","SuanchikApp","StrictMode","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","maxLength"],"mappings":"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","file":"static/js/main.025a7291.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {isAuth: state.Auth.isAuth}\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/Login\"/> ;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectetRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n    return ConnectetRedirectComponent;\r\n};","const ADD_MESSAGE = 'ADD_MESSAGE';\r\n\r\nlet initial = {\r\n  messagesList: [\r\n      {id: '1', dialogname: 'Нина', img: null},\r\n      {id: '2', dialogname: 'Абрахам', img: \"\"},\r\n      {id: '3', dialogname: 'Томас', img: null},\r\n      {id: '4', dialogname: 'Александр', img: null},\r\n      {id: '5', dialogname: 'Эмма', img: null},\r\n      {id: '6', dialogname: 'Николь', img: null}\r\n  ],\r\n  dialog: [\r\n      {id: '0', message: 'Привет'},\r\n      {id: '1', message: 'прифки'},\r\n      {id: '2', message: 'Как оно?'},\r\n      {id: '3', message: 'Прырыэкрасно'}\r\n  ]\r\n}\r\n\r\nlet messagesReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n          return {\r\n            ...state,\r\n            dialog: [...state.dialog, {id: '4', message: action.messageBody}]\r\n          }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let addMessageAC = (messageBody) => {\r\n  return {type: ADD_MESSAGE, messageBody}\r\n}\r\n \r\nexport default messagesReducer;\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/loading.c1011060.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"louder\":\"Prilouder_louder__2oolH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__2gvtQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AvaImg\":\"ProfileInfo_AvaImg__3Qutm\",\"profileInfo\":\"ProfileInfo_profileInfo__2m_c-\",\"userInfo\":\"ProfileInfo_userInfo__2xsN9\",\"item\":\"ProfileInfo_item__1-Bfv\",\"userName\":\"ProfileInfo_userName__3xtsA\"};","import React from 'react';\r\nimport classes from './formControls.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\n\r\n// export const Form = (TexPole) => {\r\n//     const FormCon = ({input, meta, ...props}) => {\r\n//         const HasError = meta.touched && meta.error;\r\n//         return (\r\n//         <div className={`${classes.formControl} ${HasError ? classes.error: ''}`}>\r\n//             <div>\r\n//                 <TexPole {...input} {...props} />\r\n//             </div>\r\n//             {HasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//         )\r\n//     } \r\n//     return FormCon;\r\n// }\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const HasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={`${classes.formControl} ${HasError ? classes.error: ''}`}>\r\n            <div>\r\n                <textarea {...input} {...props} />\r\n            </div>\r\n            {HasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const HasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={`${classes.formControl} ${HasError ? classes.error: ''}`}>\r\n            <div>\r\n                <input {...input} {...props} />\r\n            </div>\r\n            {HasError && <span className={classes.error}>{meta.error}</span>} \r\n        </div>\r\n    )\r\n};\r\n\r\nexport const createField = (placeholder, name, component, validate, props = {}, text = '') => <div><Field \r\nplaceholder={placeholder} \r\nname={name} \r\ncomponent={component} \r\nvalidate={validate} \r\n{...props}\r\n/>{text}\r\n</div>","import React from 'react';\r\nimport gifka from './../../../assets/avaImg/loading.gif';\r\nimport classes from '../Prilouder/Prilouder.module.css'\r\n\r\nconst Prilouder = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={gifka} className={classes.louder}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Prilouder;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css'\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <h1>Suanchik</h1>\r\n            {props.isAuth ? <div className={classes.logBlock}> <button onClick={props.LogOut}>Выйти</button></div> : <NavLink to={`/Login`}><div className={classes.logBlock}>Войти</div></NavLink>}\r\n        </header>\r\n    )\r\n};\r\n\r\n\r\nexport default Header;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'ef8a4b9c-1df0-4c77-aba0-118c4d1a37cf'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const UsersAPI = {\r\n    getUsers (carrentPage = null, pageSise = null) {\r\n        return instance.get(`users?page=${carrentPage}&count=${pageSise}`)\r\n        },\r\n    UnFollow (id) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    Follow (id) {\r\n        return instance.post(`follow/${id}`)\r\n    }\r\n};\r\n\r\nexport const ProfileAPI = {\r\n    getStatus(peopleID) {\r\n        return instance.get(`profile/status/${peopleID}`)\r\n    },\r\n    getProfile(peopleID) {\r\n        return instance.get(`profile/${peopleID}`)\r\n    \r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    },\r\n    savePhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photo)\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const AuthAPI = {\r\n    Auth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    Login (email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    Logout () {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n} ","import { stopSubmit } from \"redux-form\";\r\nimport { AuthAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initial = {\r\n    id: null, \r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nlet authReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let setUserData = (id, email, login, isAuth) => { return { type: SET_USER_DATA, data: {id, email, login, isAuth } }};\r\n\r\nexport let Auth = () => async (dispatch) => {\r\n       let response = await AuthAPI.Auth();\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n};\r\n\r\nexport let LogIn = (email, password, rememberMe) => async (dispatch) => {\r\n        let response = await AuthAPI.Login(email, password, rememberMe);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(Auth())\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0]: 'Some error';\r\n                dispatch(stopSubmit('login', {_error: message}))\r\n            }\r\n};\r\n\r\nexport let LogOut = () => async (dispatch) => {\r\n        let response = await AuthAPI.Logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n}\r\n\r\nexport default authReducer;","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport Header from './Header';\r\nimport { LogOut } from '../../redux/auth.reducer';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n               <Header {...this.props}/>\r\n            </>\r\n        )\r\n    }\r\n} \r\n\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.Auth.isAuth,\r\n        login: state.Auth.login\r\n    }\r\n};\r\n\r\n\r\nexport default  connect(MapStateToProps, { LogOut })(HeaderContainer);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { LogIn } from '../../redux/auth.reducer';\r\nimport { maxLengthCreator, required } from '../../Utils/validator/validator';\r\nimport { createField, Input } from '../coummon/Prilouder/formControls/formControls';\r\nimport classes from './login.module.css'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                {createField(\"email\", \"email\", Input, [required, maxLength50, ])}\r\n                {createField(\"password\", \"password\", Input, [required, maxLength50, ], {type: 'password'})}\r\n                {createField(null, \"rememderMe\", Input, [], {type: 'checkbox'}), 'запомнить'}\r\n                <div>{error}\r\n                </div>\r\n                <div>\r\n                    <button>Войти</button>\r\n                </div>\r\n            </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.LogIn(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/Profile'}/>\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.login}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {LogIn: LogIn})(Login);\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavBar.module.css';\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className={classes.Nav}>\r\n            <ul>\r\n                <li><NavLink to=\"/Profile\" activeClassName={classes.activeLink}><div className={classes.item}>Мой профиль</div></NavLink></li>\r\n                <li><NavLink to=\"/Messenger\" activeClassName={classes.activeLink}><div className={classes.item}>Сообщения</div></NavLink></li>\r\n                <li><NavLink to=\"/People\" activeClassName={classes.activeLink}><div className={classes.item}>Люди</div></NavLink></li>\r\n                {/* <li><NavLink to=\"/News\" activeClassName={classes.activeLink}><div className={classes.item}>Новости</div></NavLink></li>\r\n                <li><NavLink to=\"/Music\" activeClassName={classes.activeLink}><div className={classes.item}>Музыка</div></NavLink></li>\r\n                <li><NavLink to=\"/Setting\" activeClassName={classes.activeLink}><div className={classes.item}>Настройки</div></NavLink></li> */}\r\n            </ul>\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nexport default Nav;","import { ProfileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SET_PHOTO = \"SET_PHOTO\";\r\n\r\n\r\nlet initial = {\r\n    posts: [\r\n        {message: 'Фактам плевать на ваши чувства', likes: 'Нравится: 100', id: '1'},\r\n        {message: 'Пока ты бегаешь за женщиной, она, бегает за мужчиной, который бегает за своей мечтой', likes: 'Нравится: 150', id: '2'},\r\n        {message: 'Ты гавно либо гений, среднего не дано', likes: 'Нравится: 100', id: '3'}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nlet profileReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                newPLetter: '',\r\n                posts: [{message: action.postBody, likes: 'Нравится: 3'}, ...state.posts]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS: \r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_PHOTO: \r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photo}\r\n            }      \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let setUserProfile  = (profile) => { return { type: SET_USER_PROFILE, profile } }\r\nexport let addPostAC       = (postBody) => { return { type: ADD_POST, postBody} }\r\nexport let deletePostAC    = (postId) => { return { type: DELETE_POST, postId} }\r\nexport let setStatus       = (status) => { return {type: SET_STATUS, status} }\r\nexport let setPhoto        = (photo) => { return { type: SET_PHOTO, photo}}\r\n\r\nexport let getProfile = (userId) => async (dispatch) => {\r\n        let response = await ProfileAPI.getProfile(userId);\r\n            dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport let getUserStatus = (userId) => async (dispatch) => {\r\n       let response = await ProfileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data))\r\n}\r\n\r\nexport let upDataStatus = (status) => async (dispatch) => {\r\n        let response = await ProfileAPI.updateStatus(status);\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n};\r\n\r\nexport let saveFile = (photo) => async (dispatch) => {\r\n    let response = await ProfileAPI.savePhoto(photo);\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setPhoto(response.data.data.photos))\r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport classes from './Posts.module.css';\r\nimport ava from '../../assets/avaImg/mal2.jpg';\r\n\r\nconst Posts = (props) => {\r\n\r\n    return (\r\n        <div className={classes.Posts}>\r\n            <div className={classes.PostImg}>\r\n                <img src={ava} />\r\n                <div>\r\n                    {props.likes}\r\n                </div>\r\n                <button onClick={() => props.deletePost(props.id)}>удалить пост</button>\r\n            </div>\r\n            <div className={classes.postMessage}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Posts;\r\n","import React, { createRef } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../Utils/validator/validator';\r\nimport { Textarea } from '../coummon/Prilouder/formControls/formControls';\r\nimport classes from './MyPosts.module.css';\r\nimport Posts from './Posts';\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let posts = props.posts;\r\n    let addPostC = props.addPostC;\r\n\r\n    let addPostBody = (value) => {\r\n        addPostC(value.postBody)\r\n    }\r\n\r\n\r\n    let postsData = [...posts].reverse().map(p => <Posts message={p.message} likes={p.likes} id={p.id} deletePost={props.deletePost} />)\r\n\r\n    return (\r\n        <div className={classes.MyPosts}>\r\n            <div>\r\n                <h2>\r\n                    мои посты\r\n                </h2>\r\n                <AddPostReduxForm onSubmit={addPostBody} />\r\n            </div>\r\n            <div className={classes.Post}>\r\n                {postsData}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst addPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.textareaButton}>\r\n                <div><Field component={Textarea} placeholder=\"Напишите свой пост...\" name=\"postBody\" validate={[required, maxLength10,]} /></div>\r\n                <div><button>Опубликовать</button></div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({ form: \"messenger\" })(addPostForm);\r\n\r\n\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostAC, deletePostAC } from '../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport React from 'react'\r\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\r\n\r\nclass MyPostsContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyPosts {...this.props} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        posts: state.ProfilePage.posts,\r\n        dispatch: state.ProfilePage.dispatch,\r\n        newPLetter: state.ProfilePage.newPLetter\r\n    }\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPostC(postBody) {\r\n            dispatch(addPostAC(postBody))\r\n        },\r\n        deletePost(id) {\r\n            dispatch(deletePostAC(id))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps, MapDispatchToProps)(MyPostsContainer);;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\n\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.upDataStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode ? <div>\r\n                    <span className={classes.status} onDoubleClick={this.activateEditMode.bind(this)} >{this.props.status}</span>\r\n                </div> :\r\n                <div>\r\n                    <input onChange={this.onStatusChange.bind(this)} autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} value={this.state.status}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;","import React, { useEffect, useState } from 'react';\r\nimport classes from './ProfileInfo.module.css'\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, SetEditMode] = useState(false);\r\n    let [status, SetStatus] = useState(props.status);\r\n   \r\n    useEffect(() => {\r\n        SetStatus(props.status);\r\n    }, [props.status])\r\n\r\n    let activeEditMode = () => {\r\n        SetEditMode(true)\r\n    }\r\n    let deactiveEditMode = () => {\r\n        SetEditMode(false)\r\n        props.upDataStatus(status)\r\n    }\r\n    let onStatusChange = (e) => {\r\n        SetStatus(e.currentTarget.value);\r\n    }\r\n        return (\r\n            <div>\r\n                {!editMode && <div>\r\n                    <span className={classes.status} onDoubleClick={activeEditMode}>{props.status || '===='}</span>\r\n                </div>} \r\n                {editMode && <div>\r\n                    <input autoFocus={true} onChange={onStatusChange} onBlur={deactiveEditMode} value={status}/>\r\n                </div>}\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Prilouder from '../../coummon/Prilouder/Prilouder';\r\nimport classes from './ProfileInfo.module.css'\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ava from '../../../assets/avaImg/mal2.jpg';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHook';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let profile = props.profile;\r\n\r\n    if (!props.profile) {\r\n        return <Prilouder />\r\n    }\r\n\r\n    const mainPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.saveFile(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.profileInfo}>\r\n            <div className={classes.AvaImg}>\r\n                <img src={profile.photos.large ? profile.photos.large : ava} alt=\"\" />\r\n                <div>\r\n                    {props.isOuner && <input type=\"file\" onChange={(e) => mainPhoto(e)} />}\r\n                </div>\r\n            </div>\r\n            <div className={classes.userInfo}>\r\n                <div>\r\n                    <div className={classes.userName}>{profile.fullName}</div>\r\n                    <ProfileStatusWithHooks status={props.status} upDataStatus={props.upDataStatus} /><hr />\r\n                </div>\r\n                <div>\r\n                    <div><span>Обо мне: </span>{profile.aboutMe}</div>\r\n                </div>\r\n                <div>\r\n                    <div><span className={classes.item}>Kонтакты:</span></div>\r\n                    <div> <span className={classes.item}>Facebook:</span> {profile.contacts.facebook}</div>\r\n                    <div> <span className={classes.item}>ВК:</span> {profile.contacts.vk}</div>\r\n                    <div> <span className={classes.item}>Twitter:</span> {profile.contacts.twitter}</div>\r\n                    <div> <span className={classes.item}>Instagrem:</span> {profile.contacts.instagram}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;\r\n\r\n","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={classes.profile}>\r\n            <ProfileInfo profile={props.profile}\r\n                status={props.status}\r\n                upDataStatus={props.upDataStatus}\r\n                toggalIsFollowing={props.toggalIsFollowing}\r\n                isOuner={props.isOuner}\r\n                saveFile={props.saveFile}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter } from 'react-router';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { getProfile, getUserStatus, saveFile, upDataStatus } from '../../redux/profileReducer';\r\nimport MyPostsContainer from '../Posts/MyPosts.Container';\r\nimport Profile from './Profile';\r\nimport classes from './Profile.module.css';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.isAuthId\r\n            if (!userId) {\r\n                this.props.history.push('/Login')\r\n            }\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getUserStatus(userId)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            let userId = this.props.match.params.userId;\r\n            if (!userId) {\r\n                userId = this.props.isAuthId\r\n                if (!userId) {\r\n                    this.props.history.push('/Login')\r\n                }\r\n            }\r\n            this.props.getProfile(userId)\r\n            this.props.getUserStatus(userId)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Profile}>\r\n                <Profile {...this.props} isOuner={!this.props.match.params.userId} />\r\n                <MyPostsContainer />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status,\r\n        isAuthId: state.Auth.id,\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, { getProfile, getUserStatus, upDataStatus, saveFile }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileContainer)\r\n","export let upDataObjectArray = (items, itemsId, id, newObj) => {\r\n    return items.map(u=> {\r\n        if (u[id] === itemsId) {\r\n            return {...u, ...newObj}\r\n        } else {\r\n            return u;\r\n        }\r\n    })\r\n}","import { UsersAPI } from \"../api/api\";\r\nimport { upDataObjectArray } from \"../Utils/objehelper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_PEOPLE';\r\nconst SET_CARRENT_PAGE = 'SET_CARRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGAL_FETCHING = 'TOGGAL_FETCHING';\r\nconst TOGGAL_IS_FOLLOWING_PROGRESS = 'TOGGAL_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initial = {\r\n    users: [],\r\n    pageSise: 20,\r\n    totalCount: 0,\r\n    carrentPage: 1,\r\n    isFetching: true,\r\n    toggalIsFollowing: []\r\n}\r\n\r\n\r\nlet usersReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return {\r\n                ...state,\r\n                users: upDataObjectArray(state.users, action.usersId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: upDataObjectArray(state.users, action.usersId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...state.users = action.users]\r\n            }\r\n            \r\n        case SET_CARRENT_PAGE:\r\n           return {\r\n               ...state,\r\n               carrentPage: action.page\r\n           }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n            \r\n        case TOGGAL_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGAL_IS_FOLLOWING_PROGRESS: \r\n        return {\r\n            ...state,\r\n            toggalIsFollowing: action.isFetching ? [...state.toggalIsFollowing, action.usersId]\r\n                                                 : state.toggalIsFollowing.filter(id => id != action.usersId)\r\n        }\r\n                 \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let followSuccess = (usersId) => { return {type: FOLLOW, usersId} };\r\nexport let unfollowSuccess = (usersId) => { return {type: UNFOLLOW, usersId} };\r\nexport let setUsers = (users) => { return {type: SET_USERS, users} };\r\nexport let setCurrentPage = (page) => { return {type: SET_CARRENT_PAGE, page} };\r\nexport let setTotalusersCount = (totalCount) => { return {type: SET_TOTAL_USERS_COUNT, totalCount} };\r\nexport let setToggal = (isFetching) => { return {type: TOGGAL_FETCHING, isFetching} };\r\nexport let toggalIsFollowingProgress = (isFetching, usersId) => { return {type: TOGGAL_IS_FOLLOWING_PROGRESS, isFetching, usersId} };\r\n\r\nexport let getUsersThunkCreater = (carrentPage, pageSise) => {\r\n    return (dispatch) => {\r\n        dispatch(setToggal(true))\r\n        UsersAPI.getUsers(carrentPage, pageSise).then(response => {\r\n            dispatch(setCurrentPage(carrentPage))\r\n            dispatch(setUsers(response.data.items))\r\n            dispatch(setTotalusersCount(response.data.totalCount))\r\n            dispatch(setToggal(false))\r\n        })\r\n    }\r\n};\r\n\r\nlet followUnfollow = async (dispatch, usersId, apiMethod, actionCreater) => {\r\n    dispatch(toggalIsFollowingProgress(true, usersId))\r\n    let response = await  apiMethod(usersId)\r\n    if (response.data.resultCode == 0) {\r\n                dispatch(actionCreater(usersId))\r\n            }\r\n            dispatch(toggalIsFollowingProgress(false, usersId))\r\n}\r\n\r\nexport let UnFollowThunkCreater = (usersId) => {\r\n    return async (dispatch) => {\r\n        followUnfollow(dispatch, usersId, UsersAPI.UnFollow.bind(UsersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport let FollowThunkCreater = (usersId) => {\r\n    return async (dispatch) => {\r\n        followUnfollow(dispatch, usersId, UsersAPI.Follow.bind(UsersAPI), followSuccess)\r\n    }\r\n}\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport classes from './paginator.module.css';\r\n\r\n\r\n\r\n\r\nlet Paginator = (props) => {\r\n\r\n    let portionSize = 10;\r\n\r\n    let pagesCount = props.totalCount / props.pageSise;\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(pagesCount); i++) {\r\n        pages.push(i);\r\n    };\r\n\r\n    let protionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNum = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNum = portionNumber * portionSize\r\n\r\n    return (\r\n        <div className={classes.pageNumber}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => { setPortionNumber(portionNumber - 1) }}>назад</button>}\r\n            {\r\n                pages\r\n                    .filter(p => p >= leftPortionPageNum && p <= rightPortionPageNum)\r\n                    .map(p => {\r\n                        return <span className={props.carrentPage === p && classes.pageNumberBold} onClick={() => { props.setCurrentPage(p) }}> {p} </span>\r\n                    })\r\n            }\r\n\r\n            {protionCount > portionNumber &&\r\n                <button onClick={() => { setPortionNumber(portionNumber + 1) }}>вперед</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport classes from './Users.module.css';\r\nimport ava from '../../assets/avaImg/mal2.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction User(props) {\r\n    let u = props.user;\r\n    return (\r\n        <div className={classes.users}>\r\n            <div>\r\n                <NavLink to={`/Profile/` + u.id}><img src={!u.photos.large ? ava : u.photos.large} alt=\"\" /></NavLink>\r\n            </div>\r\n            <div>\r\n                <span>\r\n                    {u.name}\r\n                </span>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    {\r\n                        u.followed ? <button disabled={props.toggalIsFollowing.some(id => id === u.id)} onClick={() => { props.UnFollowThunkCreater(u.id) }} className={classes.unfollowColor}>Отписаться</button>\r\n                            : <button disabled={props.toggalIsFollowing.some(id => id === u.id)} onClick={() => { props.FollowThunkCreater(u.id) }}>Подписаться</button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Paginator from '../coummon/padinator';\r\nimport User from './User';\r\n\r\n\r\n\r\n\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Paginator totalCount={props.totalCount} pageSise={props.pageSise} carrentPage={props.carrentPage} setCurrentPage={props.setCurrentPage} />\r\n            {\r\n                props.users.map(u => <User\r\n                    user={u}\r\n                    toggalIsFollowing={props.toggalIsFollowing}\r\n                    UnFollowThunkCreater={props.UnFollowThunkCreater}\r\n                    FollowThunkCreater={props.FollowThunkCreater}\r\n                />)\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst GetUsersSelector = (state) => {\r\n    return state.UsersPage.users;\r\n};\r\n\r\nexport const GetUsers = createSelector(GetUsersSelector, (users) => {\r\n    return users.filter(user => true)\r\n})\r\n\r\n\r\nexport const GetTotalCount = (state) => {\r\n    return state.UsersPage.totalCount\r\n};\r\n\r\nexport const GetPageSise = (state) => {\r\n    return state.UsersPage.pageSise\r\n};\r\n\r\nexport const GetCarrentPage = (state) => {\r\n    return state.UsersPage.carrentPage\r\n};\r\n\r\nexport const GetIsFetching = (state) => {\r\n    return state.UsersPage.isFetching\r\n};\r\n\r\nexport const GetToggalIsFollowing = (state) => {\r\n    return state.UsersPage.toggalIsFollowing\r\n}","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { FollowThunkCreater, getUsersThunkCreater, toggalIsFollowingProgress, UnFollowThunkCreater } from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Prilouder from '../coummon/Prilouder/Prilouder';\r\nimport { GetCarrentPage, GetIsFetching, GetPageSise, GetTotalCount, GetToggalIsFollowing, GetUsers } from '../../redux/users.selectors';\r\n\r\n\r\nclass UserAPI extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.getUsersThunkCreater(this.props.carrentPage, this.props.pageSise)\r\n    }\r\n    setCurrentPage = (page) => {\r\n        this.props.getUsersThunkCreater(page, this.props.pageSise)\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n               {this.props.isFetching ? <Prilouder/> : null}\r\n               <Users {...this.props} setCurrentPage = {this.setCurrentPage} />\r\n            </>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        pageSise: GetPageSise(state),\r\n        totalCount: GetTotalCount(state),\r\n        users: GetUsers(state),\r\n        carrentPage: GetCarrentPage(state),\r\n        isFetching: GetIsFetching(state),\r\n        toggalIsFollowing: GetToggalIsFollowing(state)\r\n    }\r\n};\r\n\r\nconst UsersContainer = connect(MapStateToProps, { toggalIsFollowingProgress, getUsersThunkCreater, FollowThunkCreater, UnFollowThunkCreater})(UserAPI);\r\n\r\nexport default UsersContainer;","import { Auth } from \"./auth.reducer\";\r\n\r\nconst SET_INITIAL = 'SET_INITIAL';\r\n\r\nlet initial = {\r\n    initialised: false\r\n}\r\n\r\nlet appReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIAL:\r\n            return {\r\n                ...state,\r\n                initialised: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let initialisedSuccess = () => { return { type: SET_INITIAL }};\r\n\r\nexport let initialize = () => (dispatch) => {\r\n     let promise =  dispatch(Auth());\r\n     Promise.all([promise])\r\n        .then(()=> {\r\n            dispatch(initialisedSuccess())\r\n     })\r\n};\r\n\r\nexport default appReducer;","import authReducer from \"./auth.reducer\";\r\nimport messagesReducer from \"./messagesReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMeddlewara from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./appReducer\";\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: profileReducer,\r\n    MessagesPage: messagesReducer,\r\n    UsersPage: usersReducer,\r\n    Auth: authReducer,\r\n    form: formReducer,\r\n    App: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMeddlewara));\r\n\r\nexport default store;","import React from 'react';\r\nimport { Suspense } from 'react';\r\nimport Prilouder from '../components/coummon/Prilouder/Prilouder';\r\n\r\nfunction WithLaziSuspense(Component) {\r\n            return (props) => {\r\n                return <Suspense fallback={<Prilouder/>}>\r\n                            <Component {...props}/>\r\n                        </Suspense> \r\n            }\r\n        }\r\n\r\nexport default WithLaziSuspense;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { HashRouter, Route, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport './App.css';\nimport Prilouder from './components/coummon/Prilouder/Prilouder';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport NavBar from './components/NavBar/NavBar';\nimport ProfileContainer from './components/Profile/Profile.Container';\nimport UsersContainer from './components/Users/Users.Container';\nimport { initialize } from './redux/appReducer';\nimport store from './redux/redux-store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport WithLaziSuspense from './Hoc/WithLaziSuspense';\n\nconst MessengerContainer = React.lazy(() => import('./components/Messages/Messenger.Container'));\n\n\nclass App extends React.Component {\n\n  componentDidMount () {\n    this.props.initialize()\n  }\n  render () {\n    if(!this.props.initialised) {\n      return <Prilouder/>\n    } else {\n      return (\n        <div className=\"Start\">\n              <div className=\"Wrapper\">\n                  <HeaderContainer />\n                  <NavBar />\n                  <div className=\"Content\">\n                  <Route path='/Profile/:userId?' render = {() => <ProfileContainer/> }/>\n                  <Route path='/Messenger' render = { WithLaziSuspense(MessengerContainer)}/>\n                  <Route path='/People' render = {() => <UsersContainer/>} />\n                  <Route path='/Login' render = {() => <Login/>} />\n                  </div>\n              </div>\n          </div>   \n      );\n    }\n  }\n}\n\nlet MapStateToProps = (state) => {\n  return {\n    initialised: state.App.initialised,\n  }\n};\n\n\nlet AppContainer = compose(\n  withRouter,\n  connect(MapStateToProps, { initialize }),\n)(App);\n\nconst SuanchikApp = (props) => {\n  return <HashRouter>\n    <React.StrictMode>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </React.StrictMode>\n  </HashRouter>\n  \n}\n\n\nexport default SuanchikApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n  ReactDOM.render(<App />,document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"NavBar_Nav__3v0N4\",\"item\":\"NavBar_item__3y4e5\",\"activeLink\":\"NavBar_activeLink__2ZKH4\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Ошибка: Поле пустое';\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Максимальное число символов: ${maxLength} `;\r\n    return undefined; \r\n}","module.exports = __webpack_public_path__ + \"static/media/mal2.765bb451.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControls_formControl__1kdmT\",\"error\":\"formControls_error__q6Y-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__32fnb\",\"Profile\":\"Profile_Profile__3lo83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__293SV\",\"logBlock\":\"Header_logBlock__3jlhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts\":\"MyPosts_MyPosts__3jI4V\",\"Publickbutton\":\"MyPosts_Publickbutton__3xsw8\",\"textareaButton\":\"MyPosts_textareaButton__C0a05\",\"Post\":\"MyPosts_Post__1S36w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostImg\":\"Posts_PostImg__yCHSJ\",\"Posts\":\"Posts_Posts__19mC9\",\"postMessage\":\"Posts_postMessage__2k1Jc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumberBold\":\"paginator_pageNumberBold__pGK0U\",\"pageNumber\":\"paginator_pageNumber__3KHRy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1NRaJ\",\"unfollowColor\":\"Users_unfollowColor__3yo0P\"};"],"sourceRoot":""}