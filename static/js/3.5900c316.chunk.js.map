{"version":3,"sources":["components/Messages/Messenger.module.css","assets/avaImg/close.svg","components/Messages/Dialog.jsx","components/Messages/MessagesList.jsx","components/Messages/Messenger.jsx","components/Messages/Messenger.Container.jsx"],"names":["module","exports","Dialog","props","className","classes","itemD","dialogMessage","messages","map","message","author","mymessage","span","name","src","img","alt","onClick","messagId","id","window","confirm","deleteMessage","index","udalit","MessagesList","item","dialogStyles","names","dialogList","maxLength500","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","textareaButton","Field","component","Textarea","placeholder","cols","validate","required","disabled","dialogId","withRouter","match","params","dialog","messagesList","messagesData","m","to","activeClassName","active","key","dialogname","ava","addMessages","value","addMessageC","Math","random","messageBody","Dialogs","messagelist","d","dialog2","path","render","compose","connect","state","newMLetter","MessagesPage","dispatch","addMessageAC","withAuthRedirect","Messenger"],"mappings":"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","file":"static/js/3.5900c316.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Messenger_Dialogs__2sLEJ\",\"messagelist\":\"Messenger_messagelist__39cRO\",\"itemD\":\"Messenger_itemD__vkkcW\",\"dialogMessage\":\"Messenger_dialogMessage__2_Vwk\",\"img\":\"Messenger_img__1jjgU\",\"dialog\":\"Messenger_dialog__kWiKW\",\"item\":\"Messenger_item__aHh78\",\"names\":\"Messenger_names__13KEh\",\"active\":\"Messenger_active__RDj_G\",\"dialogStyles\":\"Messenger_dialogStyles__18rWz\",\"dialog2\":\"Messenger_dialog2__OBFf3\",\"textareaButton\":\"Messenger_textareaButton__94N5s\",\"showMessage\":\"Messenger_showMessage__HP9ru\",\"lastmessage\":\"Messenger_lastmessage__1ZU2J\",\"span\":\"Messenger_span__3cocT\",\"mymessage\":\"Messenger_mymessage__jDiZP\"};","module.exports = __webpack_public_path__ + \"static/media/close.1175686f.svg\";","import React from 'react';\r\nimport classes from './Messenger.module.css';\r\nimport udalit from '../../assets/avaImg/close.svg';\r\n\r\nconst Dialog = (props) => {\r\n\r\n    const deleteMessage = (messagId) => {\r\n        if (window.confirm('удалить сообщение?')) {\r\n            props.deleteMessage(props.index, messagId)\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.itemD}>\r\n            <div className={classes.dialogMessage}>\r\n                {props.messages.map(message =>\r\n                    <div className=\"dialog_container\">\r\n                        <span className={message.author === 'me' ? classes.mymessage : classes.span}>\r\n                            {message.author === props.name ? <img src={props.img} alt=\"\" /> : null} {message.message}\r\n                        </span>\r\n                        <span className={classes.img} onClick={() => deleteMessage(message.id)}>\r\n                            <img src={udalit} alt=\"delete\" />\r\n                        </span>\r\n                    </div>)}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n;\r\nexport default Dialog;","import React from 'react';\r\nimport classes from './Messenger.module.css';\r\n\r\n\r\nconst MessagesList = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <div>\r\n                <div className={classes.dialogStyles}>\r\n                    <span className={classes.names}>{props.dialogList}</span>{props.img}\r\n                    {/* <div className={classes.lastmessage}>последнее сообщениe</div> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessagesList;","import React, { useState } from 'react';\r\nimport Dialog from './Dialog';\r\nimport MessagesList from './MessagesList';\r\nimport classes from './Messenger.module.css'\r\nimport ava from '../../assets/avaImg/mal2.jpg';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Form, Textarea } from '../coummon/Prilouder/formControls/formControls';\r\nimport { maxLengthCreator, required } from '../../Utils/validator/validator';\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport { withRouter } from 'react-router'\r\n\r\n\r\nconst Messenger = (props) => {\r\n\r\n    let dialogId = props.match.params.dialogId;\r\n\r\n    // const [showDialogs, setShowMessage] = useState(false);\r\n\r\n    // const ShowMessage = () => {\r\n    //     setShowMessage(!showDialogs)\r\n    // }\r\n\r\n    let dialog = props.messagesList;\r\n    let messagesList = props.messagesList;\r\n\r\n    let messagesData = messagesList.map((m, index) => <NavLink to={`/Messenger/` + m.id} activeClassName={classes.active} ><MessagesList key={index} id={m.id} dialogList={m.dialogname} img={<img src={!m.img ? ava : m.img} />} /></NavLink>)\r\n\r\n    let addMessages = (value) => {\r\n        props.addMessageC({ id: Math.random() * 5, message: value.messageBody, author: 'me' }, dialogId)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.Dialogs}>\r\n            {/* {showDialogs ? <span className={classes.showMessage} onClick={ShowMessage}>показать сообщения</span> : */}\r\n            <span>\r\n                {/* <span className={classes.showMessage} onClick={ShowMessage}>cкрыть сообщения</span> */}\r\n                <div className={classes.messagelist}>\r\n                    {messagesData}\r\n                </div>\r\n            </span>\r\n            {/* } */}\r\n            <div className={classes.dialog}>\r\n                {\r\n                    dialog.map((d, index) =>\r\n                        <div className={classes.dialog2}>\r\n                            <Route path={\"/Messenger/\" + d.id} render={() =>\r\n                                <Dialog name={d.dialogname} img={d.img} key={index} index={index} id={d.id} messages={d.dialog} deleteMessage={props.deleteMessage} />\r\n                            } />\r\n                            <AddMessageReduxForm dialogId={dialogId} onSubmit={addMessages} />\r\n                        </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength500 = maxLengthCreator(500);\r\n\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.textareaButton}>\r\n                <Field component={Textarea} placeholder=\"Напишите ваше сообщние ...\" cols=\"75\" name=\"messageBody\" validate={[required, maxLength500,]} />\r\n                <button disabled={!props.dialogId}>Отправить</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"messenger\" })(addMessageForm);\r\n\r\nexport default withRouter(Messenger);","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { addMessageAC, deleteMessage } from '../../redux/messagesReducer';\r\nimport Messenger from './Messenger';\r\n\r\n\r\n\r\nlet MapStateToProps = (state) => {\r\n    return {\r\n        newMLetter: state.MessagesPage.newMLetter,\r\n        dispatch: state.MessagesPage.dispatch,\r\n        dialog: state.MessagesPage.dialog,\r\n        messagesList: state.MessagesPage.messagesList\r\n    }\r\n};\r\n\r\nlet MapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessageC(messageBody, dialogId) {\r\n            dispatch(addMessageAC(messageBody, dialogId))\r\n        },\r\n        deleteMessage(index, id) {\r\n            dispatch(deleteMessage(index, id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(MapStateToProps, MapDispatchToProps),\r\n    withAuthRedirect\r\n)(Messenger)\r\n\r\n"],"sourceRoot":""}